<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 注解 -->
	<context:annotation-config />
	<!-- 扫描包 -->
	<context:component-scan base-package="com.shark.ocean"></context:component-scan>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/test" />
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<!-- 创建sessionFactory，指定集成hibernate的配置文件位置和 实体映射文件位置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="false">
		<!-- 注入datasource，给sessionfactoryBean内setdatasource提供数据源 -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" >
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<!-- //加载实体类的映射文件位置及名称 -->
		<property name="mappingLocations" value="classpath:com/shark/ocean/model/*.hbm.xml"></property>
	</bean>


	<!-- <bean id="hemelDao" class="com.shark.ocean.dao.HemelDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean> -->

	<!-- 配置Spring声明式事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切点，并把切点和事务属性关联起来 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.shark.ocean.dao.*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- 定时任务配置-->
	<import resource="spring-task.xml"/>
	<!-- 权限管理 -->
	<import resource="spring-security.xml"/>

</beans>